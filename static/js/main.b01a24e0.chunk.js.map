{"version":3,"sources":["components/History.tsx","components/Card.tsx","components/ItemSuggest.tsx","components/Suggestion.tsx","App.tsx","index.tsx"],"names":["History","props","index","his","date","info","style","backgroundColor","className","Card","iconWeatherDay","this","nameCity","tempC","des","tempMin","tempMax","humidity","wind","iconWeather","React","Component","ItemSuggest","name","Suggestion","state","listCityMatched","prevProps","city","valueInput","axios","method","url","data","then","res","_embedded","setState","catch","err","console","log","map","itemCityMatched","matching_full_name","key","onClick","onClickSuggest","App","geoSuccess","position","lat","coords","latitude","toFixed","long","longitude","weathers","geoError","onClickHistoryTag","history","onChangeInput","event","target","value","onKeyUp","keyCode","trim","Date","toDateString","cities","localStorage","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","getItem","historyParsed","parse","placeholder","onChange","main","temp","weather","description","temp_min","temp_max","speed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b01a24e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./../assets/css/History.css\";\n\ninterface Props{\n  key: number,\n  index: number,\n  his: any[],\n  date: string,\n  info: any,\n  onClick: any\n}\n\nfunction History(props:Props) {\n  let { index, his, date, info } = props;\n  return (\n    <div {...props} style={{ backgroundColor: \"#DDD\" }}>\n      {info !== \"wrong name\" ? (\n        <div className=\"haveCity\">\n          {index + 1}. {his} : &nbsp; <span>{date}</span>\n        </div>\n      ) : (\n        <div className=\"unknowCity\">\n          {index + 1}. {his} : &nbsp; <span>{date}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default History;\n","import React from \"react\";\nimport \"./../assets/css/Card.css\";\n// import \"./../assets/picture/wall.jpg\";\n\ninterface Props {\n  nameCity: string;\n  tempC: number;\n  des: string;\n  tempMin: number;\n  tempMax: number;\n  humidity: number;\n  wind: number;\n  iconWeather: string;\n}\ninterface State {}\n\nclass Card extends React.Component<Props, State> {\n  render() {\n    let {\n      nameCity,\n      tempC,\n      des,\n      tempMin,\n      tempMax,\n      humidity,\n      wind,\n      iconWeather\n    } = this.props;\n    let iconWeatherDay;\n    if (iconWeather === \"Haze\") {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fas fa-smog\" />\n        </div>\n      );\n    } else if (iconWeather === \"Clouds\") {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fas fa-cloud-sun\" />\n        </div>\n      );\n    } else {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fab fa-mixcloud\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"Card\">\n        <div className=\"row itemCenter\">\n          <span className=\"title\">{nameCity}</span>\n        </div>\n        <div className=\"row itemCenter iconDes\">{iconWeatherDay}</div>\n        <div className=\"row itemCenter des\">{des}</div>\n        <div className=\"row itemCenter\">\n          <span className=\"temp\">\n            {tempC}\n            <i className=\"fas fa-temperature-low\" />\n          </span>\n        </div>\n\n        <div className=\"row footerBody\">\n          <div className=\"cardLeft\">\n            <i className=\"fas fa-arrow-down arrow\" />\n            <div className=\"wrap-content\">\n              <div>Lowest</div>\n              <div>\n                <span>{tempMin}</span>\n                <i className=\"fas fa-temperature-low\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"cardRight ml-auto\">\n            <i className=\"fas fa-arrow-up arrow\" />\n            <div className=\"wrap-content\">\n              <div>Highest</div>\n              <div>\n                <span>{tempMax}</span>\n                <i className=\"fas fa-temperature-low\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"footer\">\n          <div className=\"cardLeft\">\n            <i className=\"fas fa-tint col-3\" />\n            <div className=\"wrap-content\">\n              <div>Humidity</div>\n              <div>{humidity}%</div>\n            </div>\n          </div>\n\n          <div className=\"cardRight\">\n            <i className=\"fas fa-wind col-3\" />\n            <div className=\"wrap-content\">\n              <div>Wind</div>\n              <div>{wind}kph</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Card;\n","import React from \"react\";\n\ninterface Props{\n  key: number,\n  name: string,\n  onClick: any\n}\ninterface State{}\n\nclass ItemSuggest extends React.Component<Props,State> {\n  render() {\n    return (\n      <div {...this.props} className=\"row\">\n        {this.props.name}\n      </div>\n    );\n  }\n}\n\nexport default ItemSuggest;\n","import React from \"react\";\nimport ItemSuggest from \"./ItemSuggest\";\nimport \"./../assets/css/SuggestionCard.css\";\nimport axios from \"axios\";\n\ninterface Props{\n  valueInput: any,\n  onClickSuggest: any,\n  className: string\n}\ninterface State{\n  listCityMatched: any[]\n}\n\nclass Suggestion extends React.Component<Props, State> {\n  constructor(props:Props) {\n    super(props);\n    this.state = {\n      listCityMatched: []\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    let city = this.props.valueInput;\n    if (prevProps.valueInput !== this.props.valueInput) {\n      axios({\n        method: \"GET\",\n        url: `https://api.teleport.org/api/cities/?search=${city}&limit=005`,\n        data: null\n      })\n        .then(res => {\n          const listCityMatched = res.data._embedded[\"city:search-results\"];\n          this.setState({\n            listCityMatched\n          });\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    const { listCityMatched } = this.state;\n    return (\n      <div className=\"suggestion\">\n        {listCityMatched.map((itemCityMatched, index) => {\n          let name = itemCityMatched.matching_full_name;\n          return (\n            <ItemSuggest\n              key={index}\n              name={name}\n              onClick={() => this.props.onClickSuggest(name)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Suggestion;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport History from \"./components/History\";\nimport Card from \"./components/Card\";\nimport Suggestion from \"./components/Suggestion\";\n\ninterface Props {}\n\ninterface State {\n  valueInput: string;\n  history: any[];\n  cities: any[];\n  weathers: any[];\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      valueInput: \"\",\n      history: [],\n      cities: [],\n      weathers: []\n    };\n    // this.inputElement = React.createRef();\n  }\n\n  public geoSuccess = (position: any) => {\n    const lat = position.coords.latitude.toFixed(2);\n    const long = position.coords.longitude.toFixed(2);\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n      data: null\n    }).then(res => {\n      this.setState({\n        weathers: [res.data, ...this.state.weathers]\n      });\n    });\n  };\n\n  public geoError = () => {\n    console.log(\"you was blocked your location\");\n  };\n\n  componentDidMount() {\n    // focus input\n    // this.inputElement.current.focus();\n\n    navigator.geolocation.getCurrentPosition(this.geoSuccess, this.geoError);\n\n    // history\n    const history = localStorage.getItem(\"history\");\n    if (history) {\n      let historyParsed = JSON.parse(history);\n      this.setState({\n        history: historyParsed\n      });\n    }\n  }\n\n  public onClickHistoryTag = (index: number) => {\n    let weathers = this.state.history[index].info;\n    if (typeof weathers === \"object\") {\n      this.setState({\n        weathers: [weathers]\n      });\n    }\n  };\n\n  public onClickSuggest = (city: string) => {\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n      data: null\n    })\n      .then(res => {\n        let city = res.data;\n        this.setState({\n          weathers: [...this.state.weathers, city]\n        });\n      })\n      .catch(err => console.log(err));\n    this.setState({\n      valueInput: \"\"\n    });\n  };\n\n  public onChangeInput = (event: any) => {\n    this.setState({\n      valueInput: event.target.value\n    });\n  };\n\n  public onKeyUp = (event: { keyCode: any; target: any }) => {\n    if (event.keyCode === 13) {\n      let city = event.target.value.trim();\n      let date = new Date().toDateString();\n      if (city) {\n        axios({\n          method: \"GET\",\n          url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n          data: null\n        })\n          .then(res => {\n            let data = res.data;\n            this.setState({\n              valueInput: \"\",\n              cities: [...this.state.cities, city],\n              weathers: [...this.state.weathers, data],\n              history: [...this.state.history, { name: city, info: data, date }]\n            });\n            localStorage.setItem(\"history\", JSON.stringify(this.state.history));\n          })\n          .catch(err => {\n            this.setState({\n              valueInput: \"\",\n              history: [\n                ...this.state.history,\n                { name: city, info: \"wrong name\", date }\n              ]\n            });\n            localStorage.setItem(\"history\", JSON.stringify(this.state.history));\n          });\n      }\n    }\n  };\n\n  render() {\n    let { valueInput, weathers, history } = this.state;\n    return (\n      <div className=\"App container\">\n        <input\n          className=\"row form-control\"\n          placeholder=\"the weather of . . .\"\n          onChange={this.onChangeInput}\n          value={valueInput}\n          onKeyUp={this.onKeyUp}\n          // ref={this.inputElement}\n        />\n        {valueInput !== \"\" && (\n          <Suggestion\n            className=\"row\"\n            valueInput={valueInput}\n            onClickSuggest={this.onClickSuggest}\n          />\n        )}\n\n        <div className=\"body\">\n          <div className=\"listCard\">\n            {weathers.map((city, index) => {\n              return (\n                <Card\n                  key={index}\n                  nameCity={city.name}\n                  tempC={+(city.main.temp - 273.15).toFixed(0)}\n                  des={city.weather[0].description}\n                  tempMin={+(city.main.temp_min - 273.15).toFixed(0)}\n                  tempMax={+(city.main.temp_max - 273.15).toFixed(0)}\n                  humidity={city.main.humidity}\n                  wind={city.wind.speed}\n                  iconWeather={city.weather[0].main}\n                />\n              );\n            })}\n          </div>\n          <div className=\"sidebar\">\n            <h1>History</h1>\n            {history.map((his, index) => {\n              return (\n                <History\n                  his={his.name}\n                  key={index}\n                  index={index}\n                  date={his.date}\n                  info={his.info}\n                  onClick={() => this.onClickHistoryTag(index)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}