{"version":3,"sources":["components/History.tsx","components/Card.tsx","components/ItemSuggest.tsx","components/Suggestion.tsx","App.tsx","index.tsx"],"names":["History","props","index","his","date","info","react_default","a","createElement","Object","assign","style","backgroundColor","className","Card","iconWeatherDay","_this$props","this","nameCity","tempC","des","tempMin","tempMax","humidity","wind","iconWeather","React","Component","ItemSuggest","name","Suggestion","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","listCityMatched","prevProps","_this2","city","valueInput","axios","method","url","concat","data","then","res","_embedded","setState","catch","err","console","log","_this3","map","itemCityMatched","matching_full_name","components_ItemSuggest","key","onClick","onClickSuggest","App","geoSuccess","position","lat","coords","latitude","toFixed","long","longitude","weathers","toConsumableArray","geoError","onClickHistoryTag","history","onChangeInput","event","target","value","onKeyUp","keyCode","trim","Date","toDateString","cities","localStorage","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","getItem","historyParsed","parse","_this$state","placeholder","onChange","components_Suggestion","components_Card","main","temp","weather","description","temp_min","temp_max","speed","components_History","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.93e7653a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./../assets/css/History.css\";\n\ninterface Props{\n  key: number,\n  index: number,\n  his: any[],\n  date: string,\n  info: any,\n  onClick: any\n}\n\nfunction History(props:Props) {\n  let { index, his, date, info } = props;\n  return (\n    <div {...props} style={{ backgroundColor: \"#DDD\" }}>\n      {info !== \"wrong name\" ? (\n        <div className=\"haveCity\">\n          {index + 1}. {his} : &nbsp; <span>{date}</span>\n        </div>\n      ) : (\n        <div className=\"unknowCity\">\n          {index + 1}. {his} : &nbsp; <span>{date}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default History;\n","import React from \"react\";\nimport \"./../assets/css/Card.css\";\n// import \"./../assets/picture/wall.jpg\";\n\ninterface Props {\n  nameCity: string;\n  tempC: number;\n  des: string;\n  tempMin: number;\n  tempMax: number;\n  humidity: number;\n  wind: number;\n  iconWeather: string;\n}\ninterface State {}\n\nclass Card extends React.Component<Props, State> {\n  render() {\n    let {\n      nameCity,\n      tempC,\n      des,\n      tempMin,\n      tempMax,\n      humidity,\n      wind,\n      iconWeather\n    } = this.props;\n    let iconWeatherDay;\n    if (iconWeather === \"Haze\") {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fas fa-smog\" />\n        </div>\n      );\n    } else if (iconWeather === \"Clouds\") {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fas fa-cloud-sun\" />\n        </div>\n      );\n    } else {\n      iconWeatherDay = (\n        <div className=\"iconDes\">\n          <i className=\"fab fa-mixcloud\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"Card\">\n        <div className=\"row itemCenter\">\n          <span className=\"title\">{nameCity}</span>\n        </div>\n        <div className=\"row itemCenter iconDes\">{iconWeatherDay}</div>\n        <div className=\"row itemCenter des\">{des}</div>\n        <div className=\"row itemCenter\">\n          <span className=\"temp\">\n            {tempC}\n            <i className=\"fas fa-temperature-low\" />\n          </span>\n        </div>\n\n        <div className=\"row footerBody\">\n          <div className=\"cardLeft\">\n            <i className=\"fas fa-arrow-down arrow\" />\n            <div className=\"wrap-content\">\n              <div>Lowest</div>\n              <div>\n                <span>{tempMin}</span>\n                <i className=\"fas fa-temperature-low\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"cardRight ml-auto\">\n            <i className=\"fas fa-arrow-up arrow\" />\n            <div className=\"wrap-content\">\n              <div>Highest</div>\n              <div>\n                <span>{tempMax}</span>\n                <i className=\"fas fa-temperature-low\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"footer\">\n          <div className=\"cardLeft\">\n            <i className=\"fas fa-tint col-3\" />\n            <div className=\"wrap-content\">\n              <div>Humidity</div>\n              <div>{humidity}%</div>\n            </div>\n          </div>\n\n          <div className=\"cardRight\">\n            <i className=\"fas fa-wind col-3\" />\n            <div className=\"wrap-content\">\n              <div>Wind</div>\n              <div>{wind}kph</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Card;\n","import React from \"react\";\n\ninterface Props{\n  key: number,\n  name: string,\n  onClick: any\n}\ninterface State{}\n\nclass ItemSuggest extends React.Component<Props,State> {\n  render() {\n    return (\n      <div {...this.props} className=\"row\">\n        {this.props.name}\n      </div>\n    );\n  }\n}\n\nexport default ItemSuggest;\n","import React from \"react\";\nimport ItemSuggest from \"./ItemSuggest\";\nimport \"./../assets/css/SuggestionCard.css\";\nimport axios from \"axios\";\n\ninterface Props{\n  valueInput: any,\n  onClickSuggest: any,\n  className: string\n}\ninterface State{\n  listCityMatched: any[]\n}\n\nclass Suggestion extends React.Component<Props, State> {\n  constructor(props:Props) {\n    super(props);\n    this.state = {\n      listCityMatched: []\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    let city = this.props.valueInput;\n    if (prevProps.valueInput !== this.props.valueInput) {\n      axios({\n        method: \"GET\",\n        url: `https://api.teleport.org/api/cities/?search=${city}&limit=005`,\n        data: null\n      })\n        .then(res => {\n          const listCityMatched = res.data._embedded[\"city:search-results\"];\n          this.setState({\n            listCityMatched\n          });\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    const { listCityMatched } = this.state;\n    return (\n      <div className=\"suggestion\">\n        {listCityMatched.map((itemCityMatched, index) => {\n          let name = itemCityMatched.matching_full_name;\n          return (\n            <ItemSuggest\n              key={index}\n              name={name}\n              onClick={() => this.props.onClickSuggest(name)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Suggestion;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport History from \"./components/History\";\nimport Card from \"./components/Card\";\nimport Suggestion from \"./components/Suggestion\";\n\ninterface Props {}\n\ninterface State {\n  valueInput: string;\n  history: any[];\n  cities: any[];\n  weathers: any[];\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      valueInput: \"\",\n      history: [],\n      cities: [],\n      weathers: []\n    };\n    // this.inputElement = React.createRef();\n  }\n\n  public geoSuccess = (position: any) => {\n    const lat = position.coords.latitude.toFixed(2);\n    const long = position.coords.longitude.toFixed(2);\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n      data: null\n    }).then(res => {\n      this.setState({\n        weathers: [res.data, ...this.state.weathers]\n      });\n    });\n  };\n\n  public geoError = () => {\n    console.log(\"you was blocked your location\");\n  };\n\n  componentDidMount() {\n    // focus input\n    // this.inputElement.current.focus();\n\n    navigator.geolocation.getCurrentPosition(this.geoSuccess, this.geoError);\n\n    // history\n    const history = localStorage.getItem(\"history\");\n    if (history) {\n      let historyParsed = JSON.parse(history);\n      this.setState({\n        history: historyParsed\n      });\n    }\n  }\n\n  public onClickHistoryTag = (index: number) => {\n    let weathers = this.state.history[index].info;\n    if (typeof weathers === \"object\") {\n      this.setState({\n        weathers: [weathers]\n      });\n    }\n  };\n\n  public onClickSuggest = (city: string) => {\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n      data: null\n    })\n      .then(res => {\n        let city = res.data;\n        this.setState({\n          weathers: [...this.state.weathers, city]\n        });\n      })\n      .catch(err => console.log(err));\n    this.setState({\n      valueInput: \"\"\n    });\n  };\n\n  public onChangeInput = (event: any) => {\n    this.setState({\n      valueInput: event.target.value\n    });\n  };\n\n  public onKeyUp = (event: { keyCode: any; target: any }) => {\n    if (event.keyCode === 13) {\n      let city = event.target.value.trim();\n      let date = new Date().toDateString();\n      if (city) {\n        axios({\n          method: \"GET\",\n          url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=79e5a60cd7630f97308d4feaa26cf75d`,\n          data: null\n        })\n          .then(res => {\n            let data = res.data;\n            this.setState({\n              valueInput: \"\",\n              cities: [...this.state.cities, city],\n              weathers: [...this.state.weathers, data],\n              history: [...this.state.history, { name: city, info: data, date }]\n            });\n            localStorage.setItem(\"history\", JSON.stringify(this.state.history));\n          })\n          .catch(err => {\n            this.setState({\n              valueInput: \"\",\n              history: [\n                ...this.state.history,\n                { name: city, info: \"wrong name\", date }\n              ]\n            });\n            localStorage.setItem(\"history\", JSON.stringify(this.state.history));\n          });\n      }\n    }\n  };\n\n  render() {\n    let { valueInput, weathers, history } = this.state;\n    return (\n      <div className=\"App container\">\n        <input\n          className=\"row form-control\"\n          placeholder=\"the weather of . . .\"\n          onChange={this.onChangeInput}\n          value={valueInput}\n          onKeyUp={this.onKeyUp}\n          // ref={this.inputElement}\n        />\n        {valueInput !== \"\" && (\n          <Suggestion\n            className=\"row\"\n            valueInput={valueInput}\n            onClickSuggest={this.onClickSuggest}\n          />\n        )}\n\n        <div className=\"body\">\n          <div className=\"listCard\">\n            {weathers.map((city, index) => {\n              return (\n                <Card\n                  key={index}\n                  nameCity={city.name}\n                  tempC={+(city.main.temp - 273.15).toFixed(0)}\n                  des={city.weather[0].description}\n                  tempMin={+(city.main.temp_min - 273.15).toFixed(0)}\n                  tempMax={+(city.main.temp_max - 273.15).toFixed(0)}\n                  humidity={city.main.humidity}\n                  wind={city.wind.speed}\n                  iconWeather={city.weather[0].main}\n                />\n              );\n            })}\n          </div>\n          <div className=\"sidebar\">\n            <h1>History</h1>\n            {history.map((his, index) => {\n              return (\n                <History\n                  his={his.name}\n                  key={index}\n                  index={index}\n                  date={his.date}\n                  info={his.info}\n                  onClick={() => this.onClickHistoryTag(index)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}